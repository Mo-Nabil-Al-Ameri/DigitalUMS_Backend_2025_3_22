# Generated by Django 5.1.6 on 2025-04-19 23:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('departments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_no', models.IntegerField(db_index=True, editable=False, help_text="Unique numeric identifier for the program based on program's department", unique=True, verbose_name='Program Number')),
                ('code', models.CharField(editable=False, help_text='code (automatically generated from name', unique=True, verbose_name='Program Code')),
                ('name', models.CharField(editable=False, help_text='Full name of the program', max_length=255, verbose_name='Program Name')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the program', null=True, verbose_name='Program Description')),
                ('degree_level', models.CharField(choices=[('Diploma', 'Diploma'), ('Bachelor', "Bachelor's"), ('Master', "Master's"), ('phD', 'phD')], default='Bachelor', help_text='Degree level of the program', max_length=15, verbose_name='Degree Level')),
                ('study_system', models.CharField(choices=[('Full_Time', 'Full Time'), ('Part_Time', 'Part Time'), ('Distance', 'Distance Learning'), ('Blended', 'Blended Learning')], default='Blended', help_text='Study system of the program', max_length=15, verbose_name='Study System')),
                ('total_credits', models.PositiveSmallIntegerField(blank=True, help_text='Total number of credits for the program', null=True, verbose_name='Total Credits')),
                ('learning_outcomes', models.TextField(blank=True, help_text='Program learning outcomes according to Bologna standards', null=True, verbose_name='Learning Outcomes')),
                ('admission_requirements', models.TextField(blank=True, null=True, verbose_name='Admission Requirements')),
                ('language', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic')], default='ar', help_text='Language of instruction for the program', max_length=10, verbose_name='Teaching Language')),
                ('department', models.ForeignKey(help_text='Department of the program', on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='departments.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Academic Program',
                'verbose_name_plural': 'Academic Programs',
                'ordering': ['code', 'program_no', 'degree_level'],
            },
        ),
        migrations.CreateModel(
            name='ProgramSettings',
            fields=[
                ('program', models.OneToOneField(help_text='Program to which the settings belong', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='programsettings', serialize=False, to='programs.academicprogram', verbose_name='Program')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the program is active or not', verbose_name='Active')),
                ('standard_duration_years', models.DecimalField(decimal_places=1, help_text='Standard duration to complete the program in years', max_digits=4, verbose_name='Duration')),
                ('max_duration_years', models.DecimalField(decimal_places=1, help_text='Maximum allowed duration to complete the program in years', max_digits=6, verbose_name='Maximum Duration Years')),
                ('credits_per_semester', models.PositiveSmallIntegerField(default=18, help_text='Number of credits required per semester', verbose_name='Credits per Semester')),
                ('min_credits_per_semester', models.PositiveSmallIntegerField(default=12, help_text='Minimum number of credits required per semester', verbose_name='Minimum Credits per Semester')),
                ('max_credits_per_semester', models.PositiveSmallIntegerField(default=24, help_text='Maximum number of credits allowed per semester', verbose_name='Maximum Credits per Semester')),
                ('summer_semester_enabled', models.BooleanField(default=False, help_text='Whether summer semester is enabled or not', verbose_name='Summer Semester Enabled')),
                ('max_summer_credits', models.PositiveSmallIntegerField(default=12, help_text='Maximum number of credits allowed for the summer semester', verbose_name='Maximum Summer Credits')),
                ('min_cgpa_required', models.DecimalField(decimal_places=2, default=65.0, help_text='Minimum CGPA required to graduate', max_digits=5, verbose_name='Minimum CGPA')),
            ],
            options={
                'verbose_name': 'Program Settings',
                'verbose_name_plural': 'Program Settings',
            },
        ),
        migrations.CreateModel(
            name='AcademicLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_number', models.PositiveSmallIntegerField(help_text='Level number within the program', verbose_name='Level Number')),
                ('name', models.CharField(help_text='Name of the level', max_length=100, verbose_name='Level Name')),
                ('name_en', models.CharField(help_text='Name of the level', max_length=100, null=True, verbose_name='Level Name')),
                ('name_ar', models.CharField(help_text='Name of the level', max_length=100, null=True, verbose_name='Level Name')),
                ('required_credits', models.PositiveSmallIntegerField(default=65, help_text='Required credits to complete this level', verbose_name='Required Credits')),
                ('prerequisite_level', models.ForeignKey(blank=True, help_text='Level that must be completed before this level', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_levels', to='programs.academiclevel', verbose_name='Prerequisite Level')),
                ('program', models.ForeignKey(help_text='Program to which the level belongs', on_delete=django.db.models.deletion.CASCADE, to='programs.academicprogram', verbose_name='Program')),
            ],
            options={
                'verbose_name': 'Academic Level',
                'verbose_name_plural': 'Academic Levels',
                'ordering': ['level_number', 'program'],
            },
        ),
        migrations.AddIndex(
            model_name='academicprogram',
            index=models.Index(fields=['code'], name='program_code_idx'),
        ),
        migrations.AddIndex(
            model_name='academicprogram',
            index=models.Index(fields=['department'], name='program_department_idx'),
        ),
        migrations.AddIndex(
            model_name='academicprogram',
            index=models.Index(fields=['degree_level'], name='program_degree_level_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='academicprogram',
            unique_together={('department', 'degree_level')},
        ),
        migrations.AddIndex(
            model_name='academiclevel',
            index=models.Index(fields=['program', 'level_number'], name='program_level_number_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='academiclevel',
            unique_together={('program', 'level_number')},
        ),
    ]
